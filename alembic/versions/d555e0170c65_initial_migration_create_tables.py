"""Initial migration - create tables.

Revision ID: d555e0170c65
Revises:
Create Date: 2025-08-11 09:30:37.365715

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d555e0170c65"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "companysql",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("url", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.Column("last_scraped", sa.DateTime(), nullable=True),
        sa.Column("scrape_count", sa.Integer(), nullable=False),
        sa.Column("success_rate", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("companysql", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_companysql_active"),
            ["active"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_companysql_last_scraped"),
            ["last_scraped"],
            unique=False,
        )
        batch_op.create_index(batch_op.f("ix_companysql_name"), ["name"], unique=True)

    op.create_table(
        "jobsql",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("link", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("location", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("posted_date", sa.DateTime(), nullable=True),
        sa.Column("salary", sa.JSON(), nullable=True),
        sa.Column("favorite", sa.Boolean(), nullable=False),
        sa.Column("notes", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("content_hash", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "application_status",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column("application_date", sa.DateTime(), nullable=True),
        sa.Column("archived", sa.Boolean(), nullable=False),
        sa.Column("last_seen", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["company_id"],
            ["companysql.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("link"),
    )
    with op.batch_alter_table("jobsql", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_jobsql_application_status"),
            ["application_status"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_jobsql_archived"),
            ["archived"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_jobsql_content_hash"),
            ["content_hash"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_jobsql_last_seen"),
            ["last_seen"],
            unique=False,
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("jobsql", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_jobsql_last_seen"))
        batch_op.drop_index(batch_op.f("ix_jobsql_content_hash"))
        batch_op.drop_index(batch_op.f("ix_jobsql_archived"))
        batch_op.drop_index(batch_op.f("ix_jobsql_application_status"))

    op.drop_table("jobsql")
    with op.batch_alter_table("companysql", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_companysql_name"))
        batch_op.drop_index(batch_op.f("ix_companysql_last_scraped"))
        batch_op.drop_index(batch_op.f("ix_companysql_active"))

    op.drop_table("companysql")
    # ### end Alembic commands ###
